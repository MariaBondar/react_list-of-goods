{"version":3,"sources":["Goods.tsx","App.tsx","index.tsx"],"names":["Goods","goods","className","map","good","goodsFromServer","App","state","visible","minWordsLength","notVisible","setState","reverseGood","reverse","sortedByAlphabetic","sort","a","b","localeCompare","sortedByLength","length","reset","this","renderList","filter","type","onClick","onChange","event","target","value","Array","from","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAMaA,EAAyB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACvC,OACE,oBAAIC,UAAU,cAAd,SAEID,EAAME,KAAI,SAAAC,GAAI,OACZ,oBAAeF,UAAU,cAAzB,SACGE,GADMA,SCPbC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAQ,CACNN,MAAOI,EACPG,SAAS,EACTC,eAAgB,G,EAGlBC,WAAa,WACX,EAAKC,SAAS,CACZH,SAAS,K,EAIbI,YAAc,WACZ,EAAKD,UAAS,SAAAJ,GAAK,MAAK,CACtBN,MAAO,YAAIM,EAAMN,OAAOY,e,EAI5BC,mBAAqB,WACnB,EAAKH,UAAS,SAAAJ,GAAK,MAAK,CACtBN,MAAO,YAAIM,EAAMN,OAAOc,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,W,EAI3DE,eAAiB,WACf,EAAKR,UAAS,SAAAJ,GAAK,MAAK,CACtBN,MAAO,YAAIM,EAAMN,OAAOc,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,e,EAIxDC,MAAQ,WACN,EAAKV,SAAS,CACZV,MAAOI,K,4CAIX,WAAU,IAAD,OACP,EAA2CiB,KAAKf,MAAxCC,EAAR,EAAQA,QAASP,EAAjB,EAAiBA,MAAOQ,EAAxB,EAAwBA,eAElBc,EAAatB,EAAMuB,QAAO,SAACpB,GAC/B,OAAOA,EAAKgB,QAAUX,KAGxB,OACE,sBAAKP,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mBACCM,GACC,wBACEN,UAAU,cACVuB,KAAK,SACLC,QAASJ,KAAKZ,WAHhB,mBAQF,qBAAKR,UAAU,aAAf,UAEKM,GACC,qCACE,wBAAQkB,QAASJ,KAAKV,YAAaa,KAAK,SAAxC,qBAGA,wBAAQC,QAASJ,KAAKR,mBAAoBW,KAAK,SAA/C,iCAGA,wBAAQC,QAASJ,KAAKH,eAAgBM,KAAK,SAA3C,4BAGA,wBAAQC,QAASJ,KAAKD,MAAOI,KAAK,SAAlC,mBAGA,wBAAQE,SAAU,SAACC,GAAD,OAChB,EAAKjB,SAAS,CAAEF,gBAAiBmB,EAAMC,OAAOC,SADhD,SAIIC,MAAMC,KAAK,aAAa7B,KAAI,SAAAC,GAAI,OAC9B,wBAAQ0B,MAAO1B,EAAf,SACGA,GADuBA,QAMhC,cAAC,EAAD,CAAOH,MAAOsB,gB,GAnFZU,IAAMC,WA6FT5B,ICjHf6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dc67f3af.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const Goods: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"goods__list\">\n      {\n        goods.map(good => (\n          <li key={good} className=\"goods__item\">\n            {good}\n          </li>\n        ))\n      }\n    </ul>\n  );\n};\n\nexport default React.memo(Goods);\n","import React from 'react';\nimport './App.css';\nimport { Goods } from './Goods';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  visible: boolean;\n  goods: string[];\n  minWordsLength: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    visible: true,\n    minWordsLength: 0,\n  };\n\n  notVisible = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  reverseGood = () => {\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }));\n  };\n\n  sortedByAlphabetic = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((a, b) => a.localeCompare(b)),\n    }));\n  };\n\n  sortedByLength = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((a, b) => a.length - b.length),\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      goods: goodsFromServer,\n    });\n  };\n\n  render() {\n    const { visible, goods, minWordsLength } = this.state;\n\n    const renderList = goods.filter((good: string) => {\n      return good.length >= minWordsLength;\n    });\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Goods</h1>\n        {visible && (\n          <button\n            className=\"App__button\"\n            type=\"button\"\n            onClick={this.notVisible}\n          >\n            Start\n          </button>\n        )}\n        <div className=\"App__block\">\n          {\n            !visible && (\n              <>\n                <button onClick={this.reverseGood} type=\"button\">\n                  Reverse\n                </button>\n                <button onClick={this.sortedByAlphabetic} type=\"button\">\n                  Sort alphabetically\n                </button>\n                <button onClick={this.sortedByLength} type=\"button\">\n                  Sort by length\n                </button>\n                <button onClick={this.reset} type=\"button\">\n                  Reset\n                </button>\n                <select onChange={(event) => (\n                  this.setState({ minWordsLength: +event.target.value }))}\n                >\n                  {\n                    Array.from('123456789').map(good => (\n                      <option value={good} key={good}>\n                        {good}\n                      </option>\n                    ))\n                  }\n                </select>\n                <Goods goods={renderList} />\n              </>\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}